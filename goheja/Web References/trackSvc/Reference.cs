// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace goheja.trackSvc {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IService1", Namespace="http://tempuri.org/")]
    public partial class Service1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback updateMomgoDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateMomgoDataFromFoxiOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateMomgoCalendarOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateGarminDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback athCurrDataMongoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAthNameByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataUsingDataContractOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteMarkerOperationCompleted;
        
        private System.Threading.SendOrPostCallback addMarkerOperationCompleted;
        
        private System.Threading.SendOrPostCallback validateNickNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllMarkersByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback createEventOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateEventOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteEventOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEventsNameAndIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEventIdByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEventIdByNameForMarkersOperationCompleted;
        
        private System.Threading.SendOrPostCallback getcurrentEventByDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEventNameByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEventNameJsonOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProgramsJsonOperationCompleted;
        
        private System.Threading.SendOrPostCallback getErrprFromMobileOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProgramsJsonStringIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback insertNewProgramsJsonOperationCompleted;
        
        private System.Threading.SendOrPostCallback populateProgramOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateProgramsJsonOperationCompleted;
        
        private System.Threading.SendOrPostCallback athCurrDataByDeviceIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProgramsCompleteJsonOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkProgramNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEventNameByTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAthcurrentLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback getListedDeviceIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback attendReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback insertNewDeviceOperationCompleted;
        
        private System.Threading.SendOrPostCallback validateUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback sessionUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback getStartMarkerPositionOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUsrIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAthcurrentLocationMongoOperationCompleted;
        
        private System.Threading.SendOrPostCallback myResultsOperationCompleted;
        
        private System.Threading.SendOrPostCallback myResultsGarOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEventDateNameIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback groupResultsMongoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMyTrailForEventMongoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAthDataByDeviceIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserCalendarOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateUserDataJsonOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserCalendarFutureOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserCalendarPastOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAthJsonByNickNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserCalendarTodayOperationCompleted;
        
        private System.Threading.SendOrPostCallback resetCalendarEventOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateMomgoGroupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeFromGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllUsersForGroupManageOperationCompleted;
        
        private System.Threading.SendOrPostCallback getIyemsForGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback getIyemsForGroupManOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNonIyemsForGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback replaceUtilOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPmcOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllathForGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBestResultsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNearestEventOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBestResultsForAthOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateCoachNotesOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateMeberNotesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNotesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNotesMobOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUsrNickNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllIdsForNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEventInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAthIdByNickNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback mySummaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback addSyncOperationCompleted;
        
        private System.Threading.SendOrPostCallback validatSyncOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllAthByFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAthDitOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMobTotalsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAthDitByNickNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUsrGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateAthPersonalDataOperationCompleted;
        
        /// CodeRemarks
        public Service1() {
            this.Url = "http://go-heja.com:9002/Service1.svc";
        }
        
        public Service1(string url) {
            this.Url = url;
        }
        
        /// CodeRemarks
        public event updateMomgoDataCompletedEventHandler updateMomgoDataCompleted;
        
        /// CodeRemarks
        public event updateMomgoDataFromFoxiCompletedEventHandler updateMomgoDataFromFoxiCompleted;
        
        /// CodeRemarks
        public event updateMomgoCalendarCompletedEventHandler updateMomgoCalendarCompleted;
        
        /// CodeRemarks
        public event updateGarminDataCompletedEventHandler updateGarminDataCompleted;
        
        /// CodeRemarks
        public event athCurrDataMongoCompletedEventHandler athCurrDataMongoCompleted;
        
        /// CodeRemarks
        public event getAthNameByIdCompletedEventHandler getAthNameByIdCompleted;
        
        /// CodeRemarks
        public event GetDataUsingDataContractCompletedEventHandler GetDataUsingDataContractCompleted;
        
        /// CodeRemarks
        public event deleteMarkerCompletedEventHandler deleteMarkerCompleted;
        
        /// CodeRemarks
        public event addMarkerCompletedEventHandler addMarkerCompleted;
        
        /// CodeRemarks
        public event validateNickNameCompletedEventHandler validateNickNameCompleted;
        
        /// CodeRemarks
        public event getAllMarkersByIdCompletedEventHandler getAllMarkersByIdCompleted;
        
        /// CodeRemarks
        public event createEventCompletedEventHandler createEventCompleted;
        
        /// CodeRemarks
        public event updateEventCompletedEventHandler updateEventCompleted;
        
        /// CodeRemarks
        public event deleteEventCompletedEventHandler deleteEventCompleted;
        
        /// CodeRemarks
        public event getEventsNameAndIdCompletedEventHandler getEventsNameAndIdCompleted;
        
        /// CodeRemarks
        public event getEventIdByNameCompletedEventHandler getEventIdByNameCompleted;
        
        /// CodeRemarks
        public event getEventIdByNameForMarkersCompletedEventHandler getEventIdByNameForMarkersCompleted;
        
        /// CodeRemarks
        public event getcurrentEventByDateCompletedEventHandler getcurrentEventByDateCompleted;
        
        /// CodeRemarks
        public event getEventNameByIdCompletedEventHandler getEventNameByIdCompleted;
        
        /// CodeRemarks
        public event getEventNameJsonCompletedEventHandler getEventNameJsonCompleted;
        
        /// CodeRemarks
        public event getProgramsJsonCompletedEventHandler getProgramsJsonCompleted;
        
        /// CodeRemarks
        public event getErrprFromMobileCompletedEventHandler getErrprFromMobileCompleted;
        
        /// CodeRemarks
        public event getProgramsJsonStringIdCompletedEventHandler getProgramsJsonStringIdCompleted;
        
        /// CodeRemarks
        public event insertNewProgramsJsonCompletedEventHandler insertNewProgramsJsonCompleted;
        
        /// CodeRemarks
        public event populateProgramCompletedEventHandler populateProgramCompleted;
        
        /// CodeRemarks
        public event updateProgramsJsonCompletedEventHandler updateProgramsJsonCompleted;
        
        /// CodeRemarks
        public event athCurrDataByDeviceIdCompletedEventHandler athCurrDataByDeviceIdCompleted;
        
        /// CodeRemarks
        public event getProgramsCompleteJsonCompletedEventHandler getProgramsCompleteJsonCompleted;
        
        /// CodeRemarks
        public event checkProgramNameCompletedEventHandler checkProgramNameCompleted;
        
        /// CodeRemarks
        public event getEventNameByTypeCompletedEventHandler getEventNameByTypeCompleted;
        
        /// CodeRemarks
        public event getAthcurrentLocationCompletedEventHandler getAthcurrentLocationCompleted;
        
        /// CodeRemarks
        public event getListedDeviceIdCompletedEventHandler getListedDeviceIdCompleted;
        
        /// CodeRemarks
        public event attendReportCompletedEventHandler attendReportCompleted;
        
        /// CodeRemarks
        public event insertNewDeviceCompletedEventHandler insertNewDeviceCompleted;
        
        /// CodeRemarks
        public event validateUserCompletedEventHandler validateUserCompleted;
        
        /// CodeRemarks
        public event sessionUserCompletedEventHandler sessionUserCompleted;
        
        /// CodeRemarks
        public event getStartMarkerPositionCompletedEventHandler getStartMarkerPositionCompleted;
        
        /// CodeRemarks
        public event getUsrIdCompletedEventHandler getUsrIdCompleted;
        
        /// CodeRemarks
        public event getAthcurrentLocationMongoCompletedEventHandler getAthcurrentLocationMongoCompleted;
        
        /// CodeRemarks
        public event myResultsCompletedEventHandler myResultsCompleted;
        
        /// CodeRemarks
        public event myResultsGarCompletedEventHandler myResultsGarCompleted;
        
        /// CodeRemarks
        public event getEventDateNameIdCompletedEventHandler getEventDateNameIdCompleted;
        
        /// CodeRemarks
        public event groupResultsMongoCompletedEventHandler groupResultsMongoCompleted;
        
        /// CodeRemarks
        public event getMyTrailForEventMongoCompletedEventHandler getMyTrailForEventMongoCompleted;
        
        /// CodeRemarks
        public event getAthDataByDeviceIdCompletedEventHandler getAthDataByDeviceIdCompleted;
        
        /// CodeRemarks
        public event getUserCalendarCompletedEventHandler getUserCalendarCompleted;
        
        /// CodeRemarks
        public event updateUserDataJsonCompletedEventHandler updateUserDataJsonCompleted;
        
        /// CodeRemarks
        public event getUserCalendarFutureCompletedEventHandler getUserCalendarFutureCompleted;
        
        /// CodeRemarks
        public event getUserCalendarPastCompletedEventHandler getUserCalendarPastCompleted;
        
        /// CodeRemarks
        public event getAthJsonByNickNameCompletedEventHandler getAthJsonByNickNameCompleted;
        
        /// CodeRemarks
        public event getUserCalendarTodayCompletedEventHandler getUserCalendarTodayCompleted;
        
        /// CodeRemarks
        public event resetCalendarEventCompletedEventHandler resetCalendarEventCompleted;
        
        /// CodeRemarks
        public event updateMomgoGroupsCompletedEventHandler updateMomgoGroupsCompleted;
        
        /// CodeRemarks
        public event removeFromGroupCompletedEventHandler removeFromGroupCompleted;
        
        /// CodeRemarks
        public event getAllUsersForGroupManageCompletedEventHandler getAllUsersForGroupManageCompleted;
        
        /// CodeRemarks
        public event getIyemsForGroupCompletedEventHandler getIyemsForGroupCompleted;
        
        /// CodeRemarks
        public event getIyemsForGroupManCompletedEventHandler getIyemsForGroupManCompleted;
        
        /// CodeRemarks
        public event getNonIyemsForGroupCompletedEventHandler getNonIyemsForGroupCompleted;
        
        /// CodeRemarks
        public event replaceUtilCompletedEventHandler replaceUtilCompleted;
        
        /// CodeRemarks
        public event getPmcCompletedEventHandler getPmcCompleted;
        
        /// CodeRemarks
        public event getAllathForGroupCompletedEventHandler getAllathForGroupCompleted;
        
        /// CodeRemarks
        public event getBestResultsCompletedEventHandler getBestResultsCompleted;
        
        /// CodeRemarks
        public event getNearestEventCompletedEventHandler getNearestEventCompleted;
        
        /// CodeRemarks
        public event getBestResultsForAthCompletedEventHandler getBestResultsForAthCompleted;
        
        /// CodeRemarks
        public event updateCoachNotesCompletedEventHandler updateCoachNotesCompleted;
        
        /// CodeRemarks
        public event updateMeberNotesCompletedEventHandler updateMeberNotesCompleted;
        
        /// CodeRemarks
        public event getNotesCompletedEventHandler getNotesCompleted;
        
        /// CodeRemarks
        public event getNotesMobCompletedEventHandler getNotesMobCompleted;
        
        /// CodeRemarks
        public event getUsrNickNameCompletedEventHandler getUsrNickNameCompleted;
        
        /// CodeRemarks
        public event getAllIdsForNamesCompletedEventHandler getAllIdsForNamesCompleted;
        
        /// CodeRemarks
        public event getEventInfoCompletedEventHandler getEventInfoCompleted;
        
        /// CodeRemarks
        public event getAthIdByNickNameCompletedEventHandler getAthIdByNickNameCompleted;
        
        /// CodeRemarks
        public event mySummaryCompletedEventHandler mySummaryCompleted;
        
        /// CodeRemarks
        public event addSyncCompletedEventHandler addSyncCompleted;
        
        /// CodeRemarks
        public event validatSyncCompletedEventHandler validatSyncCompleted;
        
        /// CodeRemarks
        public event getAllAthByFilterCompletedEventHandler getAllAthByFilterCompleted;
        
        /// CodeRemarks
        public event getAthDitCompletedEventHandler getAthDitCompleted;
        
        /// CodeRemarks
        public event getMobTotalsCompletedEventHandler getMobTotalsCompleted;
        
        /// CodeRemarks
        public event getAthDitByNickNameCompletedEventHandler getAthDitByNickNameCompleted;
        
        /// CodeRemarks
        public event getUsrGroupCompletedEventHandler getUsrGroupCompleted;
        
        /// CodeRemarks
        public event updateAthPersonalDataCompletedEventHandler updateAthPersonalDataCompleted;
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/updateMomgoData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void updateMomgoData(
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string name, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string loc, 
                    System.DateTime time, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool timeSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string deviceID, 
                    float speed, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool speedSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string id, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string country, 
                    float dist, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool distSpecified, 
                    float alt, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool altSpecified, 
                    float bearing, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool bearingSpecified, 
                    int recordType, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool recordTypeSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string eventType) {
            this.Invoke("updateMomgoData", new object[] {
                        name,
                        loc,
                        time,
                        timeSpecified,
                        deviceID,
                        speed,
                        speedSpecified,
                        id,
                        country,
                        dist,
                        distSpecified,
                        alt,
                        altSpecified,
                        bearing,
                        bearingSpecified,
                        recordType,
                        recordTypeSpecified,
                        eventType});
        }
        
        /// CodeRemarks
        public void updateMomgoDataAsync(
                    string name, 
                    string loc, 
                    System.DateTime time, 
                    bool timeSpecified, 
                    string deviceID, 
                    float speed, 
                    bool speedSpecified, 
                    string id, 
                    string country, 
                    float dist, 
                    bool distSpecified, 
                    float alt, 
                    bool altSpecified, 
                    float bearing, 
                    bool bearingSpecified, 
                    int recordType, 
                    bool recordTypeSpecified, 
                    string eventType) {
            this.updateMomgoDataAsync(name, loc, time, timeSpecified, deviceID, speed, speedSpecified, id, country, dist, distSpecified, alt, altSpecified, bearing, bearingSpecified, recordType, recordTypeSpecified, eventType, null);
        }
        
        /// CodeRemarks
        public void updateMomgoDataAsync(
                    string name, 
                    string loc, 
                    System.DateTime time, 
                    bool timeSpecified, 
                    string deviceID, 
                    float speed, 
                    bool speedSpecified, 
                    string id, 
                    string country, 
                    float dist, 
                    bool distSpecified, 
                    float alt, 
                    bool altSpecified, 
                    float bearing, 
                    bool bearingSpecified, 
                    int recordType, 
                    bool recordTypeSpecified, 
                    string eventType, 
                    object userState) {
            if ((this.updateMomgoDataOperationCompleted == null)) {
                this.updateMomgoDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateMomgoDataOperationCompleted);
            }
            this.InvokeAsync("updateMomgoData", new object[] {
                        name,
                        loc,
                        time,
                        timeSpecified,
                        deviceID,
                        speed,
                        speedSpecified,
                        id,
                        country,
                        dist,
                        distSpecified,
                        alt,
                        altSpecified,
                        bearing,
                        bearingSpecified,
                        recordType,
                        recordTypeSpecified,
                        eventType}, this.updateMomgoDataOperationCompleted, userState);
        }
        
        private void OnupdateMomgoDataOperationCompleted(object arg) {
            if ((this.updateMomgoDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateMomgoDataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/updateMomgoDataFromFoxi", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void updateMomgoDataFromFoxi([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string lng, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string lat, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string updateDate, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string deviceID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string speed, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string recordType) {
            this.Invoke("updateMomgoDataFromFoxi", new object[] {
                        lng,
                        lat,
                        updateDate,
                        deviceID,
                        speed,
                        recordType});
        }
        
        /// CodeRemarks
        public void updateMomgoDataFromFoxiAsync(string lng, string lat, string updateDate, string deviceID, string speed, string recordType) {
            this.updateMomgoDataFromFoxiAsync(lng, lat, updateDate, deviceID, speed, recordType, null);
        }
        
        /// CodeRemarks
        public void updateMomgoDataFromFoxiAsync(string lng, string lat, string updateDate, string deviceID, string speed, string recordType, object userState) {
            if ((this.updateMomgoDataFromFoxiOperationCompleted == null)) {
                this.updateMomgoDataFromFoxiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateMomgoDataFromFoxiOperationCompleted);
            }
            this.InvokeAsync("updateMomgoDataFromFoxi", new object[] {
                        lng,
                        lat,
                        updateDate,
                        deviceID,
                        speed,
                        recordType}, this.updateMomgoDataFromFoxiOperationCompleted, userState);
        }
        
        private void OnupdateMomgoDataFromFoxiOperationCompleted(object arg) {
            if ((this.updateMomgoDataFromFoxiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateMomgoDataFromFoxiCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/updateMomgoCalendar", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void updateMomgoCalendar([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string eventName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string startTime, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string endTime, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string eventData, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string eventTotal, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string type, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string programName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string programStart, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string programEnd, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string tss, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string hb, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string durHrs, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string durMin) {
            this.Invoke("updateMomgoCalendar", new object[] {
                        eventName,
                        startTime,
                        endTime,
                        userId,
                        eventData,
                        eventTotal,
                        type,
                        programName,
                        programStart,
                        programEnd,
                        tss,
                        hb,
                        durHrs,
                        durMin});
        }
        
        /// CodeRemarks
        public void updateMomgoCalendarAsync(string eventName, string startTime, string endTime, string userId, string eventData, string eventTotal, string type, string programName, string programStart, string programEnd, string tss, string hb, string durHrs, string durMin) {
            this.updateMomgoCalendarAsync(eventName, startTime, endTime, userId, eventData, eventTotal, type, programName, programStart, programEnd, tss, hb, durHrs, durMin, null);
        }
        
        /// CodeRemarks
        public void updateMomgoCalendarAsync(string eventName, string startTime, string endTime, string userId, string eventData, string eventTotal, string type, string programName, string programStart, string programEnd, string tss, string hb, string durHrs, string durMin, object userState) {
            if ((this.updateMomgoCalendarOperationCompleted == null)) {
                this.updateMomgoCalendarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateMomgoCalendarOperationCompleted);
            }
            this.InvokeAsync("updateMomgoCalendar", new object[] {
                        eventName,
                        startTime,
                        endTime,
                        userId,
                        eventData,
                        eventTotal,
                        type,
                        programName,
                        programStart,
                        programEnd,
                        tss,
                        hb,
                        durHrs,
                        durMin}, this.updateMomgoCalendarOperationCompleted, userState);
        }
        
        private void OnupdateMomgoCalendarOperationCompleted(object arg) {
            if ((this.updateMomgoCalendarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateMomgoCalendarCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/updateGarminData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void updateGarminData([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string uploadid, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string mongo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string url, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string sDoc, out bool updateGarminDataResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool updateGarminDataResultSpecified) {
            object[] results = this.Invoke("updateGarminData", new object[] {
                        userId,
                        uploadid,
                        mongo,
                        url,
                        sDoc});
            updateGarminDataResult = ((bool)(results[0]));
            updateGarminDataResultSpecified = ((bool)(results[1]));
        }
        
        /// CodeRemarks
        public void updateGarminDataAsync(string userId, string uploadid, string mongo, string url, string sDoc) {
            this.updateGarminDataAsync(userId, uploadid, mongo, url, sDoc, null);
        }
        
        /// CodeRemarks
        public void updateGarminDataAsync(string userId, string uploadid, string mongo, string url, string sDoc, object userState) {
            if ((this.updateGarminDataOperationCompleted == null)) {
                this.updateGarminDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateGarminDataOperationCompleted);
            }
            this.InvokeAsync("updateGarminData", new object[] {
                        userId,
                        uploadid,
                        mongo,
                        url,
                        sDoc}, this.updateGarminDataOperationCompleted, userState);
        }
        
        private void OnupdateGarminDataOperationCompleted(object arg) {
            if ((this.updateGarminDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateGarminDataCompleted(this, new updateGarminDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/athCurrDataMongo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] athCurrDataMongo([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string athId) {
            object[] results = this.Invoke("athCurrDataMongo", new object[] {
                        athId});
            return ((string[])(results[0]));
        }
        
        /// CodeRemarks
        public void athCurrDataMongoAsync(string athId) {
            this.athCurrDataMongoAsync(athId, null);
        }
        
        /// CodeRemarks
        public void athCurrDataMongoAsync(string athId, object userState) {
            if ((this.athCurrDataMongoOperationCompleted == null)) {
                this.athCurrDataMongoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnathCurrDataMongoOperationCompleted);
            }
            this.InvokeAsync("athCurrDataMongo", new object[] {
                        athId}, this.athCurrDataMongoOperationCompleted, userState);
        }
        
        private void OnathCurrDataMongoOperationCompleted(object arg) {
            if ((this.athCurrDataMongoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.athCurrDataMongoCompleted(this, new athCurrDataMongoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getAthNameById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string getAthNameById([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string athId) {
            object[] results = this.Invoke("getAthNameById", new object[] {
                        athId});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void getAthNameByIdAsync(string athId) {
            this.getAthNameByIdAsync(athId, null);
        }
        
        /// CodeRemarks
        public void getAthNameByIdAsync(string athId, object userState) {
            if ((this.getAthNameByIdOperationCompleted == null)) {
                this.getAthNameByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAthNameByIdOperationCompleted);
            }
            this.InvokeAsync("getAthNameById", new object[] {
                        athId}, this.getAthNameByIdOperationCompleted, userState);
        }
        
        private void OngetAthNameByIdOperationCompleted(object arg) {
            if ((this.getAthNameByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAthNameByIdCompleted(this, new getAthNameByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/GetDataUsingDataContract", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public CompositeType GetDataUsingDataContract([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] CompositeType composite) {
            object[] results = this.Invoke("GetDataUsingDataContract", new object[] {
                        composite});
            return ((CompositeType)(results[0]));
        }
        
        /// CodeRemarks
        public void GetDataUsingDataContractAsync(CompositeType composite) {
            this.GetDataUsingDataContractAsync(composite, null);
        }
        
        /// CodeRemarks
        public void GetDataUsingDataContractAsync(CompositeType composite, object userState) {
            if ((this.GetDataUsingDataContractOperationCompleted == null)) {
                this.GetDataUsingDataContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataUsingDataContractOperationCompleted);
            }
            this.InvokeAsync("GetDataUsingDataContract", new object[] {
                        composite}, this.GetDataUsingDataContractOperationCompleted, userState);
        }
        
        private void OnGetDataUsingDataContractOperationCompleted(object arg) {
            if ((this.GetDataUsingDataContractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataUsingDataContractCompleted(this, new GetDataUsingDataContractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/deleteMarker", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string deleteMarker([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string mLat, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string mLng) {
            object[] results = this.Invoke("deleteMarker", new object[] {
                        mLat,
                        mLng});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void deleteMarkerAsync(string mLat, string mLng) {
            this.deleteMarkerAsync(mLat, mLng, null);
        }
        
        /// CodeRemarks
        public void deleteMarkerAsync(string mLat, string mLng, object userState) {
            if ((this.deleteMarkerOperationCompleted == null)) {
                this.deleteMarkerOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteMarkerOperationCompleted);
            }
            this.InvokeAsync("deleteMarker", new object[] {
                        mLat,
                        mLng}, this.deleteMarkerOperationCompleted, userState);
        }
        
        private void OndeleteMarkerOperationCompleted(object arg) {
            if ((this.deleteMarkerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteMarkerCompleted(this, new deleteMarkerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/addMarker", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string addMarker([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string name, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string description, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string mLat, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string mLng, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string type, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string eventid, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string imagePath, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string interval) {
            object[] results = this.Invoke("addMarker", new object[] {
                        name,
                        description,
                        mLat,
                        mLng,
                        type,
                        eventid,
                        imagePath,
                        interval});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void addMarkerAsync(string name, string description, string mLat, string mLng, string type, string eventid, string imagePath, string interval) {
            this.addMarkerAsync(name, description, mLat, mLng, type, eventid, imagePath, interval, null);
        }
        
        /// CodeRemarks
        public void addMarkerAsync(string name, string description, string mLat, string mLng, string type, string eventid, string imagePath, string interval, object userState) {
            if ((this.addMarkerOperationCompleted == null)) {
                this.addMarkerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddMarkerOperationCompleted);
            }
            this.InvokeAsync("addMarker", new object[] {
                        name,
                        description,
                        mLat,
                        mLng,
                        type,
                        eventid,
                        imagePath,
                        interval}, this.addMarkerOperationCompleted, userState);
        }
        
        private void OnaddMarkerOperationCompleted(object arg) {
            if ((this.addMarkerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addMarkerCompleted(this, new addMarkerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/validateNickName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string validateNickName([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string nickName) {
            object[] results = this.Invoke("validateNickName", new object[] {
                        nickName});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void validateNickNameAsync(string nickName) {
            this.validateNickNameAsync(nickName, null);
        }
        
        /// CodeRemarks
        public void validateNickNameAsync(string nickName, object userState) {
            if ((this.validateNickNameOperationCompleted == null)) {
                this.validateNickNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnvalidateNickNameOperationCompleted);
            }
            this.InvokeAsync("validateNickName", new object[] {
                        nickName}, this.validateNickNameOperationCompleted, userState);
        }
        
        private void OnvalidateNickNameOperationCompleted(object arg) {
            if ((this.validateNickNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.validateNickNameCompleted(this, new validateNickNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getAllMarkersById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfstring", Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays", NestingLevel=1)]
        public string[][] getAllMarkersById([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Id) {
            object[] results = this.Invoke("getAllMarkersById", new object[] {
                        Id});
            return ((string[][])(results[0]));
        }
        
        /// CodeRemarks
        public void getAllMarkersByIdAsync(string Id) {
            this.getAllMarkersByIdAsync(Id, null);
        }
        
        /// CodeRemarks
        public void getAllMarkersByIdAsync(string Id, object userState) {
            if ((this.getAllMarkersByIdOperationCompleted == null)) {
                this.getAllMarkersByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllMarkersByIdOperationCompleted);
            }
            this.InvokeAsync("getAllMarkersById", new object[] {
                        Id}, this.getAllMarkersByIdOperationCompleted, userState);
        }
        
        private void OngetAllMarkersByIdOperationCompleted(object arg) {
            if ((this.getAllMarkersByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllMarkersByIdCompleted(this, new getAllMarkersByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/createEvent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string createEvent([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string name, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string time, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string eventType, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string generaldata, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string dist, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string durHrs, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string durMin, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string tss, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string hb) {
            object[] results = this.Invoke("createEvent", new object[] {
                        name,
                        time,
                        eventType,
                        generaldata,
                        dist,
                        durHrs,
                        durMin,
                        tss,
                        hb});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void createEventAsync(string name, string time, string eventType, string generaldata, string dist, string durHrs, string durMin, string tss, string hb) {
            this.createEventAsync(name, time, eventType, generaldata, dist, durHrs, durMin, tss, hb, null);
        }
        
        /// CodeRemarks
        public void createEventAsync(string name, string time, string eventType, string generaldata, string dist, string durHrs, string durMin, string tss, string hb, object userState) {
            if ((this.createEventOperationCompleted == null)) {
                this.createEventOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateEventOperationCompleted);
            }
            this.InvokeAsync("createEvent", new object[] {
                        name,
                        time,
                        eventType,
                        generaldata,
                        dist,
                        durHrs,
                        durMin,
                        tss,
                        hb}, this.createEventOperationCompleted, userState);
        }
        
        private void OncreateEventOperationCompleted(object arg) {
            if ((this.createEventCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createEventCompleted(this, new createEventCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/updateEvent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string updateEvent([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string name, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string time, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string eventType, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string generaldata, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string dist, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string durHrs, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string durMin, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string tss, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string hb) {
            object[] results = this.Invoke("updateEvent", new object[] {
                        name,
                        time,
                        eventType,
                        generaldata,
                        dist,
                        durHrs,
                        durMin,
                        tss,
                        hb});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void updateEventAsync(string name, string time, string eventType, string generaldata, string dist, string durHrs, string durMin, string tss, string hb) {
            this.updateEventAsync(name, time, eventType, generaldata, dist, durHrs, durMin, tss, hb, null);
        }
        
        /// CodeRemarks
        public void updateEventAsync(string name, string time, string eventType, string generaldata, string dist, string durHrs, string durMin, string tss, string hb, object userState) {
            if ((this.updateEventOperationCompleted == null)) {
                this.updateEventOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateEventOperationCompleted);
            }
            this.InvokeAsync("updateEvent", new object[] {
                        name,
                        time,
                        eventType,
                        generaldata,
                        dist,
                        durHrs,
                        durMin,
                        tss,
                        hb}, this.updateEventOperationCompleted, userState);
        }
        
        private void OnupdateEventOperationCompleted(object arg) {
            if ((this.updateEventCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateEventCompleted(this, new updateEventCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/deleteEvent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string deleteEvent([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string name) {
            object[] results = this.Invoke("deleteEvent", new object[] {
                        name});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void deleteEventAsync(string name) {
            this.deleteEventAsync(name, null);
        }
        
        /// CodeRemarks
        public void deleteEventAsync(string name, object userState) {
            if ((this.deleteEventOperationCompleted == null)) {
                this.deleteEventOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteEventOperationCompleted);
            }
            this.InvokeAsync("deleteEvent", new object[] {
                        name}, this.deleteEventOperationCompleted, userState);
        }
        
        private void OndeleteEventOperationCompleted(object arg) {
            if ((this.deleteEventCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteEventCompleted(this, new deleteEventCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getEventsNameAndId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfstring", Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays", NestingLevel=1)]
        public string[][] getEventsNameAndId() {
            object[] results = this.Invoke("getEventsNameAndId", new object[0]);
            return ((string[][])(results[0]));
        }
        
        /// CodeRemarks
        public void getEventsNameAndIdAsync() {
            this.getEventsNameAndIdAsync(null);
        }
        
        /// CodeRemarks
        public void getEventsNameAndIdAsync(object userState) {
            if ((this.getEventsNameAndIdOperationCompleted == null)) {
                this.getEventsNameAndIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEventsNameAndIdOperationCompleted);
            }
            this.InvokeAsync("getEventsNameAndId", new object[0], this.getEventsNameAndIdOperationCompleted, userState);
        }
        
        private void OngetEventsNameAndIdOperationCompleted(object arg) {
            if ((this.getEventsNameAndIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEventsNameAndIdCompleted(this, new getEventsNameAndIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getEventIdByName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string getEventIdByName([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string eventName) {
            object[] results = this.Invoke("getEventIdByName", new object[] {
                        eventName});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void getEventIdByNameAsync(string eventName) {
            this.getEventIdByNameAsync(eventName, null);
        }
        
        /// CodeRemarks
        public void getEventIdByNameAsync(string eventName, object userState) {
            if ((this.getEventIdByNameOperationCompleted == null)) {
                this.getEventIdByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEventIdByNameOperationCompleted);
            }
            this.InvokeAsync("getEventIdByName", new object[] {
                        eventName}, this.getEventIdByNameOperationCompleted, userState);
        }
        
        private void OngetEventIdByNameOperationCompleted(object arg) {
            if ((this.getEventIdByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEventIdByNameCompleted(this, new getEventIdByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getEventIdByNameForMarkers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string getEventIdByNameForMarkers([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string eventName) {
            object[] results = this.Invoke("getEventIdByNameForMarkers", new object[] {
                        eventName});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void getEventIdByNameForMarkersAsync(string eventName) {
            this.getEventIdByNameForMarkersAsync(eventName, null);
        }
        
        /// CodeRemarks
        public void getEventIdByNameForMarkersAsync(string eventName, object userState) {
            if ((this.getEventIdByNameForMarkersOperationCompleted == null)) {
                this.getEventIdByNameForMarkersOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEventIdByNameForMarkersOperationCompleted);
            }
            this.InvokeAsync("getEventIdByNameForMarkers", new object[] {
                        eventName}, this.getEventIdByNameForMarkersOperationCompleted, userState);
        }
        
        private void OngetEventIdByNameForMarkersOperationCompleted(object arg) {
            if ((this.getEventIdByNameForMarkersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEventIdByNameForMarkersCompleted(this, new getEventIdByNameForMarkersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getcurrentEventByDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string getcurrentEventByDate() {
            object[] results = this.Invoke("getcurrentEventByDate", new object[0]);
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void getcurrentEventByDateAsync() {
            this.getcurrentEventByDateAsync(null);
        }
        
        /// CodeRemarks
        public void getcurrentEventByDateAsync(object userState) {
            if ((this.getcurrentEventByDateOperationCompleted == null)) {
                this.getcurrentEventByDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetcurrentEventByDateOperationCompleted);
            }
            this.InvokeAsync("getcurrentEventByDate", new object[0], this.getcurrentEventByDateOperationCompleted, userState);
        }
        
        private void OngetcurrentEventByDateOperationCompleted(object arg) {
            if ((this.getcurrentEventByDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getcurrentEventByDateCompleted(this, new getcurrentEventByDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getEventNameById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string getEventNameById([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string eventId) {
            object[] results = this.Invoke("getEventNameById", new object[] {
                        eventId});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void getEventNameByIdAsync(string eventId) {
            this.getEventNameByIdAsync(eventId, null);
        }
        
        /// CodeRemarks
        public void getEventNameByIdAsync(string eventId, object userState) {
            if ((this.getEventNameByIdOperationCompleted == null)) {
                this.getEventNameByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEventNameByIdOperationCompleted);
            }
            this.InvokeAsync("getEventNameById", new object[] {
                        eventId}, this.getEventNameByIdOperationCompleted, userState);
        }
        
        private void OngetEventNameByIdOperationCompleted(object arg) {
            if ((this.getEventNameByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEventNameByIdCompleted(this, new getEventNameByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getEventNameJson", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string getEventNameJson([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string typeId) {
            object[] results = this.Invoke("getEventNameJson", new object[] {
                        typeId});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void getEventNameJsonAsync(string typeId) {
            this.getEventNameJsonAsync(typeId, null);
        }
        
        /// CodeRemarks
        public void getEventNameJsonAsync(string typeId, object userState) {
            if ((this.getEventNameJsonOperationCompleted == null)) {
                this.getEventNameJsonOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEventNameJsonOperationCompleted);
            }
            this.InvokeAsync("getEventNameJson", new object[] {
                        typeId}, this.getEventNameJsonOperationCompleted, userState);
        }
        
        private void OngetEventNameJsonOperationCompleted(object arg) {
            if ((this.getEventNameJsonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEventNameJsonCompleted(this, new getEventNameJsonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getProgramsJson", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string getProgramsJson([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string programId) {
            object[] results = this.Invoke("getProgramsJson", new object[] {
                        programId});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void getProgramsJsonAsync(string programId) {
            this.getProgramsJsonAsync(programId, null);
        }
        
        /// CodeRemarks
        public void getProgramsJsonAsync(string programId, object userState) {
            if ((this.getProgramsJsonOperationCompleted == null)) {
                this.getProgramsJsonOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProgramsJsonOperationCompleted);
            }
            this.InvokeAsync("getProgramsJson", new object[] {
                        programId}, this.getProgramsJsonOperationCompleted, userState);
        }
        
        private void OngetProgramsJsonOperationCompleted(object arg) {
            if ((this.getProgramsJsonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProgramsJsonCompleted(this, new getProgramsJsonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getErrprFromMobile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void getErrprFromMobile([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string err, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string id, out bool getErrprFromMobileResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool getErrprFromMobileResultSpecified) {
            object[] results = this.Invoke("getErrprFromMobile", new object[] {
                        err,
                        id});
            getErrprFromMobileResult = ((bool)(results[0]));
            getErrprFromMobileResultSpecified = ((bool)(results[1]));
        }
        
        /// CodeRemarks
        public void getErrprFromMobileAsync(string err, string id) {
            this.getErrprFromMobileAsync(err, id, null);
        }
        
        /// CodeRemarks
        public void getErrprFromMobileAsync(string err, string id, object userState) {
            if ((this.getErrprFromMobileOperationCompleted == null)) {
                this.getErrprFromMobileOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetErrprFromMobileOperationCompleted);
            }
            this.InvokeAsync("getErrprFromMobile", new object[] {
                        err,
                        id}, this.getErrprFromMobileOperationCompleted, userState);
        }
        
        private void OngetErrprFromMobileOperationCompleted(object arg) {
            if ((this.getErrprFromMobileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getErrprFromMobileCompleted(this, new getErrprFromMobileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getProgramsJsonStringId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string getProgramsJsonStringId([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string programId) {
            object[] results = this.Invoke("getProgramsJsonStringId", new object[] {
                        programId});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void getProgramsJsonStringIdAsync(string programId) {
            this.getProgramsJsonStringIdAsync(programId, null);
        }
        
        /// CodeRemarks
        public void getProgramsJsonStringIdAsync(string programId, object userState) {
            if ((this.getProgramsJsonStringIdOperationCompleted == null)) {
                this.getProgramsJsonStringIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProgramsJsonStringIdOperationCompleted);
            }
            this.InvokeAsync("getProgramsJsonStringId", new object[] {
                        programId}, this.getProgramsJsonStringIdOperationCompleted, userState);
        }
        
        private void OngetProgramsJsonStringIdOperationCompleted(object arg) {
            if ((this.getProgramsJsonStringIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProgramsJsonStringIdCompleted(this, new getProgramsJsonStringIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/insertNewProgramsJson", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void insertNewProgramsJson([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string program, out bool insertNewProgramsJsonResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool insertNewProgramsJsonResultSpecified) {
            object[] results = this.Invoke("insertNewProgramsJson", new object[] {
                        program});
            insertNewProgramsJsonResult = ((bool)(results[0]));
            insertNewProgramsJsonResultSpecified = ((bool)(results[1]));
        }
        
        /// CodeRemarks
        public void insertNewProgramsJsonAsync(string program) {
            this.insertNewProgramsJsonAsync(program, null);
        }
        
        /// CodeRemarks
        public void insertNewProgramsJsonAsync(string program, object userState) {
            if ((this.insertNewProgramsJsonOperationCompleted == null)) {
                this.insertNewProgramsJsonOperationCompleted = new System.Threading.SendOrPostCallback(this.OninsertNewProgramsJsonOperationCompleted);
            }
            this.InvokeAsync("insertNewProgramsJson", new object[] {
                        program}, this.insertNewProgramsJsonOperationCompleted, userState);
        }
        
        private void OninsertNewProgramsJsonOperationCompleted(object arg) {
            if ((this.insertNewProgramsJsonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.insertNewProgramsJsonCompleted(this, new insertNewProgramsJsonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/populateProgram", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void populateProgram([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string programId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string programDate, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userId, out bool populateProgramResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool populateProgramResultSpecified) {
            object[] results = this.Invoke("populateProgram", new object[] {
                        programId,
                        programDate,
                        userId});
            populateProgramResult = ((bool)(results[0]));
            populateProgramResultSpecified = ((bool)(results[1]));
        }
        
        /// CodeRemarks
        public void populateProgramAsync(string programId, string programDate, string userId) {
            this.populateProgramAsync(programId, programDate, userId, null);
        }
        
        /// CodeRemarks
        public void populateProgramAsync(string programId, string programDate, string userId, object userState) {
            if ((this.populateProgramOperationCompleted == null)) {
                this.populateProgramOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpopulateProgramOperationCompleted);
            }
            this.InvokeAsync("populateProgram", new object[] {
                        programId,
                        programDate,
                        userId}, this.populateProgramOperationCompleted, userState);
        }
        
        private void OnpopulateProgramOperationCompleted(object arg) {
            if ((this.populateProgramCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.populateProgramCompleted(this, new populateProgramCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/updateProgramsJson", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void updateProgramsJson([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string program, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string id, out bool updateProgramsJsonResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool updateProgramsJsonResultSpecified) {
            object[] results = this.Invoke("updateProgramsJson", new object[] {
                        program,
                        id});
            updateProgramsJsonResult = ((bool)(results[0]));
            updateProgramsJsonResultSpecified = ((bool)(results[1]));
        }
        
        /// CodeRemarks
        public void updateProgramsJsonAsync(string program, string id) {
            this.updateProgramsJsonAsync(program, id, null);
        }
        
        /// CodeRemarks
        public void updateProgramsJsonAsync(string program, string id, object userState) {
            if ((this.updateProgramsJsonOperationCompleted == null)) {
                this.updateProgramsJsonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateProgramsJsonOperationCompleted);
            }
            this.InvokeAsync("updateProgramsJson", new object[] {
                        program,
                        id}, this.updateProgramsJsonOperationCompleted, userState);
        }
        
        private void OnupdateProgramsJsonOperationCompleted(object arg) {
            if ((this.updateProgramsJsonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateProgramsJsonCompleted(this, new updateProgramsJsonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/athCurrDataByDeviceId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string athCurrDataByDeviceId([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string deviceId) {
            object[] results = this.Invoke("athCurrDataByDeviceId", new object[] {
                        deviceId});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void athCurrDataByDeviceIdAsync(string deviceId) {
            this.athCurrDataByDeviceIdAsync(deviceId, null);
        }
        
        /// CodeRemarks
        public void athCurrDataByDeviceIdAsync(string deviceId, object userState) {
            if ((this.athCurrDataByDeviceIdOperationCompleted == null)) {
                this.athCurrDataByDeviceIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnathCurrDataByDeviceIdOperationCompleted);
            }
            this.InvokeAsync("athCurrDataByDeviceId", new object[] {
                        deviceId}, this.athCurrDataByDeviceIdOperationCompleted, userState);
        }
        
        private void OnathCurrDataByDeviceIdOperationCompleted(object arg) {
            if ((this.athCurrDataByDeviceIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.athCurrDataByDeviceIdCompleted(this, new athCurrDataByDeviceIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getProgramsCompleteJson", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string getProgramsCompleteJson([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string programId) {
            object[] results = this.Invoke("getProgramsCompleteJson", new object[] {
                        programId});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void getProgramsCompleteJsonAsync(string programId) {
            this.getProgramsCompleteJsonAsync(programId, null);
        }
        
        /// CodeRemarks
        public void getProgramsCompleteJsonAsync(string programId, object userState) {
            if ((this.getProgramsCompleteJsonOperationCompleted == null)) {
                this.getProgramsCompleteJsonOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProgramsCompleteJsonOperationCompleted);
            }
            this.InvokeAsync("getProgramsCompleteJson", new object[] {
                        programId}, this.getProgramsCompleteJsonOperationCompleted, userState);
        }
        
        private void OngetProgramsCompleteJsonOperationCompleted(object arg) {
            if ((this.getProgramsCompleteJsonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProgramsCompleteJsonCompleted(this, new getProgramsCompleteJsonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/checkProgramName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string checkProgramName([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string programName) {
            object[] results = this.Invoke("checkProgramName", new object[] {
                        programName});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void checkProgramNameAsync(string programName) {
            this.checkProgramNameAsync(programName, null);
        }
        
        /// CodeRemarks
        public void checkProgramNameAsync(string programName, object userState) {
            if ((this.checkProgramNameOperationCompleted == null)) {
                this.checkProgramNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckProgramNameOperationCompleted);
            }
            this.InvokeAsync("checkProgramName", new object[] {
                        programName}, this.checkProgramNameOperationCompleted, userState);
        }
        
        private void OncheckProgramNameOperationCompleted(object arg) {
            if ((this.checkProgramNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkProgramNameCompleted(this, new checkProgramNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getEventNameByType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] getEventNameByType([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string typeName) {
            object[] results = this.Invoke("getEventNameByType", new object[] {
                        typeName});
            return ((string[])(results[0]));
        }
        
        /// CodeRemarks
        public void getEventNameByTypeAsync(string typeName) {
            this.getEventNameByTypeAsync(typeName, null);
        }
        
        /// CodeRemarks
        public void getEventNameByTypeAsync(string typeName, object userState) {
            if ((this.getEventNameByTypeOperationCompleted == null)) {
                this.getEventNameByTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEventNameByTypeOperationCompleted);
            }
            this.InvokeAsync("getEventNameByType", new object[] {
                        typeName}, this.getEventNameByTypeOperationCompleted, userState);
        }
        
        private void OngetEventNameByTypeOperationCompleted(object arg) {
            if ((this.getEventNameByTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEventNameByTypeCompleted(this, new getEventNameByTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getAthcurrentLocation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string getAthcurrentLocation([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string athId) {
            object[] results = this.Invoke("getAthcurrentLocation", new object[] {
                        athId});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void getAthcurrentLocationAsync(string athId) {
            this.getAthcurrentLocationAsync(athId, null);
        }
        
        /// CodeRemarks
        public void getAthcurrentLocationAsync(string athId, object userState) {
            if ((this.getAthcurrentLocationOperationCompleted == null)) {
                this.getAthcurrentLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAthcurrentLocationOperationCompleted);
            }
            this.InvokeAsync("getAthcurrentLocation", new object[] {
                        athId}, this.getAthcurrentLocationOperationCompleted, userState);
        }
        
        private void OngetAthcurrentLocationOperationCompleted(object arg) {
            if ((this.getAthcurrentLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAthcurrentLocationCompleted(this, new getAthcurrentLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getListedDeviceId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string getListedDeviceId([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string deviceId) {
            object[] results = this.Invoke("getListedDeviceId", new object[] {
                        deviceId});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void getListedDeviceIdAsync(string deviceId) {
            this.getListedDeviceIdAsync(deviceId, null);
        }
        
        /// CodeRemarks
        public void getListedDeviceIdAsync(string deviceId, object userState) {
            if ((this.getListedDeviceIdOperationCompleted == null)) {
                this.getListedDeviceIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetListedDeviceIdOperationCompleted);
            }
            this.InvokeAsync("getListedDeviceId", new object[] {
                        deviceId}, this.getListedDeviceIdOperationCompleted, userState);
        }
        
        private void OngetListedDeviceIdOperationCompleted(object arg) {
            if ((this.getListedDeviceIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getListedDeviceIdCompleted(this, new getListedDeviceIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/attendReport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string attendReport([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string date, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string group) {
            object[] results = this.Invoke("attendReport", new object[] {
                        date,
                        group});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void attendReportAsync(string date, string group) {
            this.attendReportAsync(date, group, null);
        }
        
        /// CodeRemarks
        public void attendReportAsync(string date, string group, object userState) {
            if ((this.attendReportOperationCompleted == null)) {
                this.attendReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnattendReportOperationCompleted);
            }
            this.InvokeAsync("attendReport", new object[] {
                        date,
                        group}, this.attendReportOperationCompleted, userState);
        }
        
        private void OnattendReportOperationCompleted(object arg) {
            if ((this.attendReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.attendReportCompleted(this, new attendReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/insertNewDevice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void insertNewDevice([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string fName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Lname, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string deviceId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string psw, bool acceptedTerms, [System.Xml.Serialization.XmlIgnoreAttribute()] bool acceptedTermsSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string email, int age, [System.Xml.Serialization.XmlIgnoreAttribute()] bool ageSpecified) {
            this.Invoke("insertNewDevice", new object[] {
                        fName,
                        Lname,
                        deviceId,
                        userName,
                        psw,
                        acceptedTerms,
                        acceptedTermsSpecified,
                        email,
                        age,
                        ageSpecified});
        }
        
        /// CodeRemarks
        public void insertNewDeviceAsync(string fName, string Lname, string deviceId, string userName, string psw, bool acceptedTerms, bool acceptedTermsSpecified, string email, int age, bool ageSpecified) {
            this.insertNewDeviceAsync(fName, Lname, deviceId, userName, psw, acceptedTerms, acceptedTermsSpecified, email, age, ageSpecified, null);
        }
        
        /// CodeRemarks
        public void insertNewDeviceAsync(string fName, string Lname, string deviceId, string userName, string psw, bool acceptedTerms, bool acceptedTermsSpecified, string email, int age, bool ageSpecified, object userState) {
            if ((this.insertNewDeviceOperationCompleted == null)) {
                this.insertNewDeviceOperationCompleted = new System.Threading.SendOrPostCallback(this.OninsertNewDeviceOperationCompleted);
            }
            this.InvokeAsync("insertNewDevice", new object[] {
                        fName,
                        Lname,
                        deviceId,
                        userName,
                        psw,
                        acceptedTerms,
                        acceptedTermsSpecified,
                        email,
                        age,
                        ageSpecified}, this.insertNewDeviceOperationCompleted, userState);
        }
        
        private void OninsertNewDeviceOperationCompleted(object arg) {
            if ((this.insertNewDeviceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.insertNewDeviceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/validateUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string validateUser([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string usr, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string psw) {
            object[] results = this.Invoke("validateUser", new object[] {
                        usr,
                        psw});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void validateUserAsync(string usr, string psw) {
            this.validateUserAsync(usr, psw, null);
        }
        
        /// CodeRemarks
        public void validateUserAsync(string usr, string psw, object userState) {
            if ((this.validateUserOperationCompleted == null)) {
                this.validateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnvalidateUserOperationCompleted);
            }
            this.InvokeAsync("validateUser", new object[] {
                        usr,
                        psw}, this.validateUserOperationCompleted, userState);
        }
        
        private void OnvalidateUserOperationCompleted(object arg) {
            if ((this.validateUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.validateUserCompleted(this, new validateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/sessionUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string sessionUser([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string usr) {
            object[] results = this.Invoke("sessionUser", new object[] {
                        usr});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void sessionUserAsync(string usr) {
            this.sessionUserAsync(usr, null);
        }
        
        /// CodeRemarks
        public void sessionUserAsync(string usr, object userState) {
            if ((this.sessionUserOperationCompleted == null)) {
                this.sessionUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsessionUserOperationCompleted);
            }
            this.InvokeAsync("sessionUser", new object[] {
                        usr}, this.sessionUserOperationCompleted, userState);
        }
        
        private void OnsessionUserOperationCompleted(object arg) {
            if ((this.sessionUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sessionUserCompleted(this, new sessionUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getStartMarkerPosition", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string getStartMarkerPosition([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string eventId) {
            object[] results = this.Invoke("getStartMarkerPosition", new object[] {
                        eventId});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void getStartMarkerPositionAsync(string eventId) {
            this.getStartMarkerPositionAsync(eventId, null);
        }
        
        /// CodeRemarks
        public void getStartMarkerPositionAsync(string eventId, object userState) {
            if ((this.getStartMarkerPositionOperationCompleted == null)) {
                this.getStartMarkerPositionOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetStartMarkerPositionOperationCompleted);
            }
            this.InvokeAsync("getStartMarkerPosition", new object[] {
                        eventId}, this.getStartMarkerPositionOperationCompleted, userState);
        }
        
        private void OngetStartMarkerPositionOperationCompleted(object arg) {
            if ((this.getStartMarkerPositionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getStartMarkerPositionCompleted(this, new getStartMarkerPositionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getUsrId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string getUsrId([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string usr, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string psw) {
            object[] results = this.Invoke("getUsrId", new object[] {
                        usr,
                        psw});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void getUsrIdAsync(string usr, string psw) {
            this.getUsrIdAsync(usr, psw, null);
        }
        
        /// CodeRemarks
        public void getUsrIdAsync(string usr, string psw, object userState) {
            if ((this.getUsrIdOperationCompleted == null)) {
                this.getUsrIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUsrIdOperationCompleted);
            }
            this.InvokeAsync("getUsrId", new object[] {
                        usr,
                        psw}, this.getUsrIdOperationCompleted, userState);
        }
        
        private void OngetUsrIdOperationCompleted(object arg) {
            if ((this.getUsrIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUsrIdCompleted(this, new getUsrIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getAthcurrentLocationMongo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string getAthcurrentLocationMongo([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string athId) {
            object[] results = this.Invoke("getAthcurrentLocationMongo", new object[] {
                        athId});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void getAthcurrentLocationMongoAsync(string athId) {
            this.getAthcurrentLocationMongoAsync(athId, null);
        }
        
        /// CodeRemarks
        public void getAthcurrentLocationMongoAsync(string athId, object userState) {
            if ((this.getAthcurrentLocationMongoOperationCompleted == null)) {
                this.getAthcurrentLocationMongoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAthcurrentLocationMongoOperationCompleted);
            }
            this.InvokeAsync("getAthcurrentLocationMongo", new object[] {
                        athId}, this.getAthcurrentLocationMongoOperationCompleted, userState);
        }
        
        private void OngetAthcurrentLocationMongoOperationCompleted(object arg) {
            if ((this.getAthcurrentLocationMongoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAthcurrentLocationMongoCompleted(this, new getAthcurrentLocationMongoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/myResults", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfstring", Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays", NestingLevel=1)]
        public string[][] myResults([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string nickName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string eventId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string eventStartDate) {
            object[] results = this.Invoke("myResults", new object[] {
                        nickName,
                        eventId,
                        eventStartDate});
            return ((string[][])(results[0]));
        }
        
        /// CodeRemarks
        public void myResultsAsync(string nickName, string eventId, string eventStartDate) {
            this.myResultsAsync(nickName, eventId, eventStartDate, null);
        }
        
        /// CodeRemarks
        public void myResultsAsync(string nickName, string eventId, string eventStartDate, object userState) {
            if ((this.myResultsOperationCompleted == null)) {
                this.myResultsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmyResultsOperationCompleted);
            }
            this.InvokeAsync("myResults", new object[] {
                        nickName,
                        eventId,
                        eventStartDate}, this.myResultsOperationCompleted, userState);
        }
        
        private void OnmyResultsOperationCompleted(object arg) {
            if ((this.myResultsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.myResultsCompleted(this, new myResultsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/myResultsGar", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] myResultsGar([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string nickName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string eventId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string eventStartDate) {
            object[] results = this.Invoke("myResultsGar", new object[] {
                        nickName,
                        eventId,
                        eventStartDate});
            return ((string[])(results[0]));
        }
        
        /// CodeRemarks
        public void myResultsGarAsync(string nickName, string eventId, string eventStartDate) {
            this.myResultsGarAsync(nickName, eventId, eventStartDate, null);
        }
        
        /// CodeRemarks
        public void myResultsGarAsync(string nickName, string eventId, string eventStartDate, object userState) {
            if ((this.myResultsGarOperationCompleted == null)) {
                this.myResultsGarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmyResultsGarOperationCompleted);
            }
            this.InvokeAsync("myResultsGar", new object[] {
                        nickName,
                        eventId,
                        eventStartDate}, this.myResultsGarOperationCompleted, userState);
        }
        
        private void OnmyResultsGarOperationCompleted(object arg) {
            if ((this.myResultsGarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.myResultsGarCompleted(this, new myResultsGarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getEventDateNameId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string getEventDateNameId([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string eventId) {
            object[] results = this.Invoke("getEventDateNameId", new object[] {
                        eventId});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void getEventDateNameIdAsync(string eventId) {
            this.getEventDateNameIdAsync(eventId, null);
        }
        
        /// CodeRemarks
        public void getEventDateNameIdAsync(string eventId, object userState) {
            if ((this.getEventDateNameIdOperationCompleted == null)) {
                this.getEventDateNameIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEventDateNameIdOperationCompleted);
            }
            this.InvokeAsync("getEventDateNameId", new object[] {
                        eventId}, this.getEventDateNameIdOperationCompleted, userState);
        }
        
        private void OngetEventDateNameIdOperationCompleted(object arg) {
            if ((this.getEventDateNameIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEventDateNameIdCompleted(this, new getEventDateNameIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/groupResultsMongo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfstring", Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays", NestingLevel=1)]
        public string[][] groupResultsMongo([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string eventId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string eventStartDate) {
            object[] results = this.Invoke("groupResultsMongo", new object[] {
                        eventId,
                        eventStartDate});
            return ((string[][])(results[0]));
        }
        
        /// CodeRemarks
        public void groupResultsMongoAsync(string eventId, string eventStartDate) {
            this.groupResultsMongoAsync(eventId, eventStartDate, null);
        }
        
        /// CodeRemarks
        public void groupResultsMongoAsync(string eventId, string eventStartDate, object userState) {
            if ((this.groupResultsMongoOperationCompleted == null)) {
                this.groupResultsMongoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngroupResultsMongoOperationCompleted);
            }
            this.InvokeAsync("groupResultsMongo", new object[] {
                        eventId,
                        eventStartDate}, this.groupResultsMongoOperationCompleted, userState);
        }
        
        private void OngroupResultsMongoOperationCompleted(object arg) {
            if ((this.groupResultsMongoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.groupResultsMongoCompleted(this, new groupResultsMongoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getMyTrailForEventMongo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfstring", Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays", NestingLevel=1)]
        public string[][] getMyTrailForEventMongo([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string athId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string eventId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string eventStartDate) {
            object[] results = this.Invoke("getMyTrailForEventMongo", new object[] {
                        athId,
                        eventId,
                        eventStartDate});
            return ((string[][])(results[0]));
        }
        
        /// CodeRemarks
        public void getMyTrailForEventMongoAsync(string athId, string eventId, string eventStartDate) {
            this.getMyTrailForEventMongoAsync(athId, eventId, eventStartDate, null);
        }
        
        /// CodeRemarks
        public void getMyTrailForEventMongoAsync(string athId, string eventId, string eventStartDate, object userState) {
            if ((this.getMyTrailForEventMongoOperationCompleted == null)) {
                this.getMyTrailForEventMongoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMyTrailForEventMongoOperationCompleted);
            }
            this.InvokeAsync("getMyTrailForEventMongo", new object[] {
                        athId,
                        eventId,
                        eventStartDate}, this.getMyTrailForEventMongoOperationCompleted, userState);
        }
        
        private void OngetMyTrailForEventMongoOperationCompleted(object arg) {
            if ((this.getMyTrailForEventMongoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMyTrailForEventMongoCompleted(this, new getMyTrailForEventMongoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getAthDataByDeviceId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] getAthDataByDeviceId([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string deviceId) {
            object[] results = this.Invoke("getAthDataByDeviceId", new object[] {
                        deviceId});
            return ((string[])(results[0]));
        }
        
        /// CodeRemarks
        public void getAthDataByDeviceIdAsync(string deviceId) {
            this.getAthDataByDeviceIdAsync(deviceId, null);
        }
        
        /// CodeRemarks
        public void getAthDataByDeviceIdAsync(string deviceId, object userState) {
            if ((this.getAthDataByDeviceIdOperationCompleted == null)) {
                this.getAthDataByDeviceIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAthDataByDeviceIdOperationCompleted);
            }
            this.InvokeAsync("getAthDataByDeviceId", new object[] {
                        deviceId}, this.getAthDataByDeviceIdOperationCompleted, userState);
        }
        
        private void OngetAthDataByDeviceIdOperationCompleted(object arg) {
            if ((this.getAthDataByDeviceIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAthDataByDeviceIdCompleted(this, new getAthDataByDeviceIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getUserCalendar", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string getUserCalendar([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string athId) {
            object[] results = this.Invoke("getUserCalendar", new object[] {
                        athId});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void getUserCalendarAsync(string athId) {
            this.getUserCalendarAsync(athId, null);
        }
        
        /// CodeRemarks
        public void getUserCalendarAsync(string athId, object userState) {
            if ((this.getUserCalendarOperationCompleted == null)) {
                this.getUserCalendarOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserCalendarOperationCompleted);
            }
            this.InvokeAsync("getUserCalendar", new object[] {
                        athId}, this.getUserCalendarOperationCompleted, userState);
        }
        
        private void OngetUserCalendarOperationCompleted(object arg) {
            if ((this.getUserCalendarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserCalendarCompleted(this, new getUserCalendarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/updateUserDataJson", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string updateUserDataJson([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string json, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string updatedById) {
            object[] results = this.Invoke("updateUserDataJson", new object[] {
                        userName,
                        json,
                        updatedById});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void updateUserDataJsonAsync(string userName, string json, string updatedById) {
            this.updateUserDataJsonAsync(userName, json, updatedById, null);
        }
        
        /// CodeRemarks
        public void updateUserDataJsonAsync(string userName, string json, string updatedById, object userState) {
            if ((this.updateUserDataJsonOperationCompleted == null)) {
                this.updateUserDataJsonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateUserDataJsonOperationCompleted);
            }
            this.InvokeAsync("updateUserDataJson", new object[] {
                        userName,
                        json,
                        updatedById}, this.updateUserDataJsonOperationCompleted, userState);
        }
        
        private void OnupdateUserDataJsonOperationCompleted(object arg) {
            if ((this.updateUserDataJsonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateUserDataJsonCompleted(this, new updateUserDataJsonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getUserCalendarFuture", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string getUserCalendarFuture([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string athId) {
            object[] results = this.Invoke("getUserCalendarFuture", new object[] {
                        athId});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void getUserCalendarFutureAsync(string athId) {
            this.getUserCalendarFutureAsync(athId, null);
        }
        
        /// CodeRemarks
        public void getUserCalendarFutureAsync(string athId, object userState) {
            if ((this.getUserCalendarFutureOperationCompleted == null)) {
                this.getUserCalendarFutureOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserCalendarFutureOperationCompleted);
            }
            this.InvokeAsync("getUserCalendarFuture", new object[] {
                        athId}, this.getUserCalendarFutureOperationCompleted, userState);
        }
        
        private void OngetUserCalendarFutureOperationCompleted(object arg) {
            if ((this.getUserCalendarFutureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserCalendarFutureCompleted(this, new getUserCalendarFutureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getUserCalendarPast", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string getUserCalendarPast([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string athId) {
            object[] results = this.Invoke("getUserCalendarPast", new object[] {
                        athId});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void getUserCalendarPastAsync(string athId) {
            this.getUserCalendarPastAsync(athId, null);
        }
        
        /// CodeRemarks
        public void getUserCalendarPastAsync(string athId, object userState) {
            if ((this.getUserCalendarPastOperationCompleted == null)) {
                this.getUserCalendarPastOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserCalendarPastOperationCompleted);
            }
            this.InvokeAsync("getUserCalendarPast", new object[] {
                        athId}, this.getUserCalendarPastOperationCompleted, userState);
        }
        
        private void OngetUserCalendarPastOperationCompleted(object arg) {
            if ((this.getUserCalendarPastCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserCalendarPastCompleted(this, new getUserCalendarPastCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getAthJsonByNickName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string getAthJsonByNickName([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string nickName) {
            object[] results = this.Invoke("getAthJsonByNickName", new object[] {
                        nickName});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void getAthJsonByNickNameAsync(string nickName) {
            this.getAthJsonByNickNameAsync(nickName, null);
        }
        
        /// CodeRemarks
        public void getAthJsonByNickNameAsync(string nickName, object userState) {
            if ((this.getAthJsonByNickNameOperationCompleted == null)) {
                this.getAthJsonByNickNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAthJsonByNickNameOperationCompleted);
            }
            this.InvokeAsync("getAthJsonByNickName", new object[] {
                        nickName}, this.getAthJsonByNickNameOperationCompleted, userState);
        }
        
        private void OngetAthJsonByNickNameOperationCompleted(object arg) {
            if ((this.getAthJsonByNickNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAthJsonByNickNameCompleted(this, new getAthJsonByNickNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getUserCalendarToday", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string getUserCalendarToday([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string athId) {
            object[] results = this.Invoke("getUserCalendarToday", new object[] {
                        athId});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void getUserCalendarTodayAsync(string athId) {
            this.getUserCalendarTodayAsync(athId, null);
        }
        
        /// CodeRemarks
        public void getUserCalendarTodayAsync(string athId, object userState) {
            if ((this.getUserCalendarTodayOperationCompleted == null)) {
                this.getUserCalendarTodayOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserCalendarTodayOperationCompleted);
            }
            this.InvokeAsync("getUserCalendarToday", new object[] {
                        athId}, this.getUserCalendarTodayOperationCompleted, userState);
        }
        
        private void OngetUserCalendarTodayOperationCompleted(object arg) {
            if ((this.getUserCalendarTodayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserCalendarTodayCompleted(this, new getUserCalendarTodayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/resetCalendarEvent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void resetCalendarEvent([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string startDate, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string endDate, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string eventId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string opType) {
            this.Invoke("resetCalendarEvent", new object[] {
                        startDate,
                        endDate,
                        eventId,
                        userId,
                        opType});
        }
        
        /// CodeRemarks
        public void resetCalendarEventAsync(string startDate, string endDate, string eventId, string userId, string opType) {
            this.resetCalendarEventAsync(startDate, endDate, eventId, userId, opType, null);
        }
        
        /// CodeRemarks
        public void resetCalendarEventAsync(string startDate, string endDate, string eventId, string userId, string opType, object userState) {
            if ((this.resetCalendarEventOperationCompleted == null)) {
                this.resetCalendarEventOperationCompleted = new System.Threading.SendOrPostCallback(this.OnresetCalendarEventOperationCompleted);
            }
            this.InvokeAsync("resetCalendarEvent", new object[] {
                        startDate,
                        endDate,
                        eventId,
                        userId,
                        opType}, this.resetCalendarEventOperationCompleted, userState);
        }
        
        private void OnresetCalendarEventOperationCompleted(object arg) {
            if ((this.resetCalendarEventCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.resetCalendarEventCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/updateMomgoGroups", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string updateMomgoGroups([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string groupName, int groupid, [System.Xml.Serialization.XmlIgnoreAttribute()] bool groupidSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userNickName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userUrl, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userImg) {
            object[] results = this.Invoke("updateMomgoGroups", new object[] {
                        groupName,
                        groupid,
                        groupidSpecified,
                        userNickName,
                        userUrl,
                        userImg});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void updateMomgoGroupsAsync(string groupName, int groupid, bool groupidSpecified, string userNickName, string userUrl, string userImg) {
            this.updateMomgoGroupsAsync(groupName, groupid, groupidSpecified, userNickName, userUrl, userImg, null);
        }
        
        /// CodeRemarks
        public void updateMomgoGroupsAsync(string groupName, int groupid, bool groupidSpecified, string userNickName, string userUrl, string userImg, object userState) {
            if ((this.updateMomgoGroupsOperationCompleted == null)) {
                this.updateMomgoGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateMomgoGroupsOperationCompleted);
            }
            this.InvokeAsync("updateMomgoGroups", new object[] {
                        groupName,
                        groupid,
                        groupidSpecified,
                        userNickName,
                        userUrl,
                        userImg}, this.updateMomgoGroupsOperationCompleted, userState);
        }
        
        private void OnupdateMomgoGroupsOperationCompleted(object arg) {
            if ((this.updateMomgoGroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateMomgoGroupsCompleted(this, new updateMomgoGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/removeFromGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string removeFromGroup(int groupid, [System.Xml.Serialization.XmlIgnoreAttribute()] bool groupidSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userNickName) {
            object[] results = this.Invoke("removeFromGroup", new object[] {
                        groupid,
                        groupidSpecified,
                        userNickName});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void removeFromGroupAsync(int groupid, bool groupidSpecified, string userNickName) {
            this.removeFromGroupAsync(groupid, groupidSpecified, userNickName, null);
        }
        
        /// CodeRemarks
        public void removeFromGroupAsync(int groupid, bool groupidSpecified, string userNickName, object userState) {
            if ((this.removeFromGroupOperationCompleted == null)) {
                this.removeFromGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveFromGroupOperationCompleted);
            }
            this.InvokeAsync("removeFromGroup", new object[] {
                        groupid,
                        groupidSpecified,
                        userNickName}, this.removeFromGroupOperationCompleted, userState);
        }
        
        private void OnremoveFromGroupOperationCompleted(object arg) {
            if ((this.removeFromGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeFromGroupCompleted(this, new removeFromGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getAllUsersForGroupManage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string getAllUsersForGroupManage([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string dim) {
            object[] results = this.Invoke("getAllUsersForGroupManage", new object[] {
                        dim});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void getAllUsersForGroupManageAsync(string dim) {
            this.getAllUsersForGroupManageAsync(dim, null);
        }
        
        /// CodeRemarks
        public void getAllUsersForGroupManageAsync(string dim, object userState) {
            if ((this.getAllUsersForGroupManageOperationCompleted == null)) {
                this.getAllUsersForGroupManageOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllUsersForGroupManageOperationCompleted);
            }
            this.InvokeAsync("getAllUsersForGroupManage", new object[] {
                        dim}, this.getAllUsersForGroupManageOperationCompleted, userState);
        }
        
        private void OngetAllUsersForGroupManageOperationCompleted(object arg) {
            if ((this.getAllUsersForGroupManageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllUsersForGroupManageCompleted(this, new getAllUsersForGroupManageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getIyemsForGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string getIyemsForGroup(int groupId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool groupIdSpecified) {
            object[] results = this.Invoke("getIyemsForGroup", new object[] {
                        groupId,
                        groupIdSpecified});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void getIyemsForGroupAsync(int groupId, bool groupIdSpecified) {
            this.getIyemsForGroupAsync(groupId, groupIdSpecified, null);
        }
        
        /// CodeRemarks
        public void getIyemsForGroupAsync(int groupId, bool groupIdSpecified, object userState) {
            if ((this.getIyemsForGroupOperationCompleted == null)) {
                this.getIyemsForGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetIyemsForGroupOperationCompleted);
            }
            this.InvokeAsync("getIyemsForGroup", new object[] {
                        groupId,
                        groupIdSpecified}, this.getIyemsForGroupOperationCompleted, userState);
        }
        
        private void OngetIyemsForGroupOperationCompleted(object arg) {
            if ((this.getIyemsForGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getIyemsForGroupCompleted(this, new getIyemsForGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getIyemsForGroupMan", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string getIyemsForGroupMan(int groupId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool groupIdSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string filter) {
            object[] results = this.Invoke("getIyemsForGroupMan", new object[] {
                        groupId,
                        groupIdSpecified,
                        filter});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void getIyemsForGroupManAsync(int groupId, bool groupIdSpecified, string filter) {
            this.getIyemsForGroupManAsync(groupId, groupIdSpecified, filter, null);
        }
        
        /// CodeRemarks
        public void getIyemsForGroupManAsync(int groupId, bool groupIdSpecified, string filter, object userState) {
            if ((this.getIyemsForGroupManOperationCompleted == null)) {
                this.getIyemsForGroupManOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetIyemsForGroupManOperationCompleted);
            }
            this.InvokeAsync("getIyemsForGroupMan", new object[] {
                        groupId,
                        groupIdSpecified,
                        filter}, this.getIyemsForGroupManOperationCompleted, userState);
        }
        
        private void OngetIyemsForGroupManOperationCompleted(object arg) {
            if ((this.getIyemsForGroupManCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getIyemsForGroupManCompleted(this, new getIyemsForGroupManCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getNonIyemsForGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string getNonIyemsForGroup(int groupId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool groupIdSpecified) {
            object[] results = this.Invoke("getNonIyemsForGroup", new object[] {
                        groupId,
                        groupIdSpecified});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void getNonIyemsForGroupAsync(int groupId, bool groupIdSpecified) {
            this.getNonIyemsForGroupAsync(groupId, groupIdSpecified, null);
        }
        
        /// CodeRemarks
        public void getNonIyemsForGroupAsync(int groupId, bool groupIdSpecified, object userState) {
            if ((this.getNonIyemsForGroupOperationCompleted == null)) {
                this.getNonIyemsForGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNonIyemsForGroupOperationCompleted);
            }
            this.InvokeAsync("getNonIyemsForGroup", new object[] {
                        groupId,
                        groupIdSpecified}, this.getNonIyemsForGroupOperationCompleted, userState);
        }
        
        private void OngetNonIyemsForGroupOperationCompleted(object arg) {
            if ((this.getNonIyemsForGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNonIyemsForGroupCompleted(this, new getNonIyemsForGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/replaceUtil", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string replaceUtil() {
            object[] results = this.Invoke("replaceUtil", new object[0]);
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void replaceUtilAsync() {
            this.replaceUtilAsync(null);
        }
        
        /// CodeRemarks
        public void replaceUtilAsync(object userState) {
            if ((this.replaceUtilOperationCompleted == null)) {
                this.replaceUtilOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreplaceUtilOperationCompleted);
            }
            this.InvokeAsync("replaceUtil", new object[0], this.replaceUtilOperationCompleted, userState);
        }
        
        private void OnreplaceUtilOperationCompleted(object arg) {
            if ((this.replaceUtilCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.replaceUtilCompleted(this, new replaceUtilCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getPmc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public object getPmc([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userId) {
            object[] results = this.Invoke("getPmc", new object[] {
                        userId});
            return ((object)(results[0]));
        }
        
        /// CodeRemarks
        public void getPmcAsync(string userId) {
            this.getPmcAsync(userId, null);
        }
        
        /// CodeRemarks
        public void getPmcAsync(string userId, object userState) {
            if ((this.getPmcOperationCompleted == null)) {
                this.getPmcOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPmcOperationCompleted);
            }
            this.InvokeAsync("getPmc", new object[] {
                        userId}, this.getPmcOperationCompleted, userState);
        }
        
        private void OngetPmcOperationCompleted(object arg) {
            if ((this.getPmcCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPmcCompleted(this, new getPmcCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getAllathForGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] getAllathForGroup(int groupId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool groupIdSpecified) {
            object[] results = this.Invoke("getAllathForGroup", new object[] {
                        groupId,
                        groupIdSpecified});
            return ((string[])(results[0]));
        }
        
        /// CodeRemarks
        public void getAllathForGroupAsync(int groupId, bool groupIdSpecified) {
            this.getAllathForGroupAsync(groupId, groupIdSpecified, null);
        }
        
        /// CodeRemarks
        public void getAllathForGroupAsync(int groupId, bool groupIdSpecified, object userState) {
            if ((this.getAllathForGroupOperationCompleted == null)) {
                this.getAllathForGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllathForGroupOperationCompleted);
            }
            this.InvokeAsync("getAllathForGroup", new object[] {
                        groupId,
                        groupIdSpecified}, this.getAllathForGroupOperationCompleted, userState);
        }
        
        private void OngetAllathForGroupOperationCompleted(object arg) {
            if ((this.getAllathForGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllathForGroupCompleted(this, new getAllathForGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getBestResults", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string getBestResults([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string fullName) {
            object[] results = this.Invoke("getBestResults", new object[] {
                        fullName});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void getBestResultsAsync(string fullName) {
            this.getBestResultsAsync(fullName, null);
        }
        
        /// CodeRemarks
        public void getBestResultsAsync(string fullName, object userState) {
            if ((this.getBestResultsOperationCompleted == null)) {
                this.getBestResultsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBestResultsOperationCompleted);
            }
            this.InvokeAsync("getBestResults", new object[] {
                        fullName}, this.getBestResultsOperationCompleted, userState);
        }
        
        private void OngetBestResultsOperationCompleted(object arg) {
            if ((this.getBestResultsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBestResultsCompleted(this, new getBestResultsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getNearestEvent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfBsonElement", Namespace="http://schemas.datacontract.org/2004/07/MongoDB.Bson")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MongoDB.Bson", IsNullable=false, NestingLevel=1)]
        public BsonElement[][] getNearestEvent([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string athId) {
            object[] results = this.Invoke("getNearestEvent", new object[] {
                        athId});
            return ((BsonElement[][])(results[0]));
        }
        
        /// CodeRemarks
        public void getNearestEventAsync(string athId) {
            this.getNearestEventAsync(athId, null);
        }
        
        /// CodeRemarks
        public void getNearestEventAsync(string athId, object userState) {
            if ((this.getNearestEventOperationCompleted == null)) {
                this.getNearestEventOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNearestEventOperationCompleted);
            }
            this.InvokeAsync("getNearestEvent", new object[] {
                        athId}, this.getNearestEventOperationCompleted, userState);
        }
        
        private void OngetNearestEventOperationCompleted(object arg) {
            if ((this.getNearestEventCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNearestEventCompleted(this, new getNearestEventCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getBestResultsForAth", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] getBestResultsForAth([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string fullName, bool save, [System.Xml.Serialization.XmlIgnoreAttribute()] bool saveSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userId) {
            object[] results = this.Invoke("getBestResultsForAth", new object[] {
                        fullName,
                        save,
                        saveSpecified,
                        userId});
            return ((string[])(results[0]));
        }
        
        /// CodeRemarks
        public void getBestResultsForAthAsync(string fullName, bool save, bool saveSpecified, string userId) {
            this.getBestResultsForAthAsync(fullName, save, saveSpecified, userId, null);
        }
        
        /// CodeRemarks
        public void getBestResultsForAthAsync(string fullName, bool save, bool saveSpecified, string userId, object userState) {
            if ((this.getBestResultsForAthOperationCompleted == null)) {
                this.getBestResultsForAthOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBestResultsForAthOperationCompleted);
            }
            this.InvokeAsync("getBestResultsForAth", new object[] {
                        fullName,
                        save,
                        saveSpecified,
                        userId}, this.getBestResultsForAthOperationCompleted, userState);
        }
        
        private void OngetBestResultsForAthOperationCompleted(object arg) {
            if ((this.getBestResultsForAthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBestResultsForAthCompleted(this, new getBestResultsForAthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/updateCoachNotes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfBsonElement", Namespace="http://schemas.datacontract.org/2004/07/MongoDB.Bson")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MongoDB.Bson", IsNullable=false, NestingLevel=1)]
        public BsonElement[][] updateCoachNotes([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string notes, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string id, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string group, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string genData, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string totalDist, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string tss, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string hb, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string usernn, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string duration) {
            object[] results = this.Invoke("updateCoachNotes", new object[] {
                        notes,
                        id,
                        group,
                        genData,
                        totalDist,
                        tss,
                        hb,
                        usernn,
                        duration});
            return ((BsonElement[][])(results[0]));
        }
        
        /// CodeRemarks
        public void updateCoachNotesAsync(string notes, string id, string group, string genData, string totalDist, string tss, string hb, string usernn, string duration) {
            this.updateCoachNotesAsync(notes, id, group, genData, totalDist, tss, hb, usernn, duration, null);
        }
        
        /// CodeRemarks
        public void updateCoachNotesAsync(string notes, string id, string group, string genData, string totalDist, string tss, string hb, string usernn, string duration, object userState) {
            if ((this.updateCoachNotesOperationCompleted == null)) {
                this.updateCoachNotesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateCoachNotesOperationCompleted);
            }
            this.InvokeAsync("updateCoachNotes", new object[] {
                        notes,
                        id,
                        group,
                        genData,
                        totalDist,
                        tss,
                        hb,
                        usernn,
                        duration}, this.updateCoachNotesOperationCompleted, userState);
        }
        
        private void OnupdateCoachNotesOperationCompleted(object arg) {
            if ((this.updateCoachNotesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateCoachNotesCompleted(this, new updateCoachNotesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/updateMeberNotes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfBsonElement", Namespace="http://schemas.datacontract.org/2004/07/MongoDB.Bson")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MongoDB.Bson", IsNullable=false, NestingLevel=1)]
        public BsonElement[][] updateMeberNotes([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string notes, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string id, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string usernn) {
            object[] results = this.Invoke("updateMeberNotes", new object[] {
                        notes,
                        id,
                        usernn});
            return ((BsonElement[][])(results[0]));
        }
        
        /// CodeRemarks
        public void updateMeberNotesAsync(string notes, string id, string usernn) {
            this.updateMeberNotesAsync(notes, id, usernn, null);
        }
        
        /// CodeRemarks
        public void updateMeberNotesAsync(string notes, string id, string usernn, object userState) {
            if ((this.updateMeberNotesOperationCompleted == null)) {
                this.updateMeberNotesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateMeberNotesOperationCompleted);
            }
            this.InvokeAsync("updateMeberNotes", new object[] {
                        notes,
                        id,
                        usernn}, this.updateMeberNotesOperationCompleted, userState);
        }
        
        private void OnupdateMeberNotesOperationCompleted(object arg) {
            if ((this.updateMeberNotesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateMeberNotesCompleted(this, new updateMeberNotesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getNotes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string getNotes([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string id, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string group) {
            object[] results = this.Invoke("getNotes", new object[] {
                        id,
                        group});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void getNotesAsync(string id, string group) {
            this.getNotesAsync(id, group, null);
        }
        
        /// CodeRemarks
        public void getNotesAsync(string id, string group, object userState) {
            if ((this.getNotesOperationCompleted == null)) {
                this.getNotesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNotesOperationCompleted);
            }
            this.InvokeAsync("getNotes", new object[] {
                        id,
                        group}, this.getNotesOperationCompleted, userState);
        }
        
        private void OngetNotesOperationCompleted(object arg) {
            if ((this.getNotesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNotesCompleted(this, new getNotesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getNotesMob", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string getNotesMob([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string id, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string group) {
            object[] results = this.Invoke("getNotesMob", new object[] {
                        id,
                        group});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void getNotesMobAsync(string id, string group) {
            this.getNotesMobAsync(id, group, null);
        }
        
        /// CodeRemarks
        public void getNotesMobAsync(string id, string group, object userState) {
            if ((this.getNotesMobOperationCompleted == null)) {
                this.getNotesMobOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNotesMobOperationCompleted);
            }
            this.InvokeAsync("getNotesMob", new object[] {
                        id,
                        group}, this.getNotesMobOperationCompleted, userState);
        }
        
        private void OngetNotesMobOperationCompleted(object arg) {
            if ((this.getNotesMobCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNotesMobCompleted(this, new getNotesMobCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getUsrNickName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string getUsrNickName([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string usr, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string psw) {
            object[] results = this.Invoke("getUsrNickName", new object[] {
                        usr,
                        psw});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void getUsrNickNameAsync(string usr, string psw) {
            this.getUsrNickNameAsync(usr, psw, null);
        }
        
        /// CodeRemarks
        public void getUsrNickNameAsync(string usr, string psw, object userState) {
            if ((this.getUsrNickNameOperationCompleted == null)) {
                this.getUsrNickNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUsrNickNameOperationCompleted);
            }
            this.InvokeAsync("getUsrNickName", new object[] {
                        usr,
                        psw}, this.getUsrNickNameOperationCompleted, userState);
        }
        
        private void OngetUsrNickNameOperationCompleted(object arg) {
            if ((this.getUsrNickNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUsrNickNameCompleted(this, new getUsrNickNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getAllIdsForNames", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string getAllIdsForNames([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string names) {
            object[] results = this.Invoke("getAllIdsForNames", new object[] {
                        names});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void getAllIdsForNamesAsync(string names) {
            this.getAllIdsForNamesAsync(names, null);
        }
        
        /// CodeRemarks
        public void getAllIdsForNamesAsync(string names, object userState) {
            if ((this.getAllIdsForNamesOperationCompleted == null)) {
                this.getAllIdsForNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllIdsForNamesOperationCompleted);
            }
            this.InvokeAsync("getAllIdsForNames", new object[] {
                        names}, this.getAllIdsForNamesOperationCompleted, userState);
        }
        
        private void OngetAllIdsForNamesOperationCompleted(object arg) {
            if ((this.getAllIdsForNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllIdsForNamesCompleted(this, new getAllIdsForNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getEventInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] getEventInfo([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string eventName) {
            object[] results = this.Invoke("getEventInfo", new object[] {
                        eventName});
            return ((string[])(results[0]));
        }
        
        /// CodeRemarks
        public void getEventInfoAsync(string eventName) {
            this.getEventInfoAsync(eventName, null);
        }
        
        /// CodeRemarks
        public void getEventInfoAsync(string eventName, object userState) {
            if ((this.getEventInfoOperationCompleted == null)) {
                this.getEventInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEventInfoOperationCompleted);
            }
            this.InvokeAsync("getEventInfo", new object[] {
                        eventName}, this.getEventInfoOperationCompleted, userState);
        }
        
        private void OngetEventInfoOperationCompleted(object arg) {
            if ((this.getEventInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEventInfoCompleted(this, new getEventInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getAthIdByNickName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string getAthIdByNickName([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string nickName) {
            object[] results = this.Invoke("getAthIdByNickName", new object[] {
                        nickName});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void getAthIdByNickNameAsync(string nickName) {
            this.getAthIdByNickNameAsync(nickName, null);
        }
        
        /// CodeRemarks
        public void getAthIdByNickNameAsync(string nickName, object userState) {
            if ((this.getAthIdByNickNameOperationCompleted == null)) {
                this.getAthIdByNickNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAthIdByNickNameOperationCompleted);
            }
            this.InvokeAsync("getAthIdByNickName", new object[] {
                        nickName}, this.getAthIdByNickNameOperationCompleted, userState);
        }
        
        private void OngetAthIdByNickNameOperationCompleted(object arg) {
            if ((this.getAthIdByNickNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAthIdByNickNameCompleted(this, new getAthIdByNickNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/mySummary", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string mySummary([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string nickName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string eventId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string eventStartDate) {
            object[] results = this.Invoke("mySummary", new object[] {
                        nickName,
                        eventId,
                        eventStartDate});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void mySummaryAsync(string nickName, string eventId, string eventStartDate) {
            this.mySummaryAsync(nickName, eventId, eventStartDate, null);
        }
        
        /// CodeRemarks
        public void mySummaryAsync(string nickName, string eventId, string eventStartDate, object userState) {
            if ((this.mySummaryOperationCompleted == null)) {
                this.mySummaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmySummaryOperationCompleted);
            }
            this.InvokeAsync("mySummary", new object[] {
                        nickName,
                        eventId,
                        eventStartDate}, this.mySummaryOperationCompleted, userState);
        }
        
        private void OnmySummaryOperationCompleted(object arg) {
            if ((this.mySummaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.mySummaryCompleted(this, new mySummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/addSync", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string addSync([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string url, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string mon, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("addSync", new object[] {
                        userId,
                        url,
                        mon,
                        token});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void addSyncAsync(string userId, string url, string mon, string token) {
            this.addSyncAsync(userId, url, mon, token, null);
        }
        
        /// CodeRemarks
        public void addSyncAsync(string userId, string url, string mon, string token, object userState) {
            if ((this.addSyncOperationCompleted == null)) {
                this.addSyncOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddSyncOperationCompleted);
            }
            this.InvokeAsync("addSync", new object[] {
                        userId,
                        url,
                        mon,
                        token}, this.addSyncOperationCompleted, userState);
        }
        
        private void OnaddSyncOperationCompleted(object arg) {
            if ((this.addSyncCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addSyncCompleted(this, new addSyncCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/validatSync", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string validatSync([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string usrId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string url) {
            object[] results = this.Invoke("validatSync", new object[] {
                        usrId,
                        url});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void validatSyncAsync(string usrId, string url) {
            this.validatSyncAsync(usrId, url, null);
        }
        
        /// CodeRemarks
        public void validatSyncAsync(string usrId, string url, object userState) {
            if ((this.validatSyncOperationCompleted == null)) {
                this.validatSyncOperationCompleted = new System.Threading.SendOrPostCallback(this.OnvalidatSyncOperationCompleted);
            }
            this.InvokeAsync("validatSync", new object[] {
                        usrId,
                        url}, this.validatSyncOperationCompleted, userState);
        }
        
        private void OnvalidatSyncOperationCompleted(object arg) {
            if ((this.validatSyncCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.validatSyncCompleted(this, new validatSyncCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getAllAthByFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string getAllAthByFilter([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string filter, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string isNew) {
            object[] results = this.Invoke("getAllAthByFilter", new object[] {
                        filter,
                        isNew});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void getAllAthByFilterAsync(string filter, string isNew) {
            this.getAllAthByFilterAsync(filter, isNew, null);
        }
        
        /// CodeRemarks
        public void getAllAthByFilterAsync(string filter, string isNew, object userState) {
            if ((this.getAllAthByFilterOperationCompleted == null)) {
                this.getAllAthByFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllAthByFilterOperationCompleted);
            }
            this.InvokeAsync("getAllAthByFilter", new object[] {
                        filter,
                        isNew}, this.getAllAthByFilterOperationCompleted, userState);
        }
        
        private void OngetAllAthByFilterOperationCompleted(object arg) {
            if ((this.getAllAthByFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllAthByFilterCompleted(this, new getAllAthByFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getAthDit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string getAthDit([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string athId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string withTotal) {
            object[] results = this.Invoke("getAthDit", new object[] {
                        athId,
                        withTotal});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void getAthDitAsync(string athId, string withTotal) {
            this.getAthDitAsync(athId, withTotal, null);
        }
        
        /// CodeRemarks
        public void getAthDitAsync(string athId, string withTotal, object userState) {
            if ((this.getAthDitOperationCompleted == null)) {
                this.getAthDitOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAthDitOperationCompleted);
            }
            this.InvokeAsync("getAthDit", new object[] {
                        athId,
                        withTotal}, this.getAthDitOperationCompleted, userState);
        }
        
        private void OngetAthDitOperationCompleted(object arg) {
            if ((this.getAthDitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAthDitCompleted(this, new getAthDitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getMobTotals", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string getMobTotals([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string athId) {
            object[] results = this.Invoke("getMobTotals", new object[] {
                        athId});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void getMobTotalsAsync(string athId) {
            this.getMobTotalsAsync(athId, null);
        }
        
        /// CodeRemarks
        public void getMobTotalsAsync(string athId, object userState) {
            if ((this.getMobTotalsOperationCompleted == null)) {
                this.getMobTotalsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMobTotalsOperationCompleted);
            }
            this.InvokeAsync("getMobTotals", new object[] {
                        athId}, this.getMobTotalsOperationCompleted, userState);
        }
        
        private void OngetMobTotalsOperationCompleted(object arg) {
            if ((this.getMobTotalsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMobTotalsCompleted(this, new getMobTotalsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getAthDitByNickName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string getAthDitByNickName([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string athNickName) {
            object[] results = this.Invoke("getAthDitByNickName", new object[] {
                        athNickName});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void getAthDitByNickNameAsync(string athNickName) {
            this.getAthDitByNickNameAsync(athNickName, null);
        }
        
        /// CodeRemarks
        public void getAthDitByNickNameAsync(string athNickName, object userState) {
            if ((this.getAthDitByNickNameOperationCompleted == null)) {
                this.getAthDitByNickNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAthDitByNickNameOperationCompleted);
            }
            this.InvokeAsync("getAthDitByNickName", new object[] {
                        athNickName}, this.getAthDitByNickNameOperationCompleted, userState);
        }
        
        private void OngetAthDitByNickNameOperationCompleted(object arg) {
            if ((this.getAthDitByNickNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAthDitByNickNameCompleted(this, new getAthDitByNickNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getUsrGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string getUsrGroup([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string usr, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string psw) {
            object[] results = this.Invoke("getUsrGroup", new object[] {
                        usr,
                        psw});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void getUsrGroupAsync(string usr, string psw) {
            this.getUsrGroupAsync(usr, psw, null);
        }
        
        /// CodeRemarks
        public void getUsrGroupAsync(string usr, string psw, object userState) {
            if ((this.getUsrGroupOperationCompleted == null)) {
                this.getUsrGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUsrGroupOperationCompleted);
            }
            this.InvokeAsync("getUsrGroup", new object[] {
                        usr,
                        psw}, this.getUsrGroupOperationCompleted, userState);
        }
        
        private void OngetUsrGroupOperationCompleted(object arg) {
            if ((this.getUsrGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUsrGroupCompleted(this, new getUsrGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/updateAthPersonalData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void updateAthPersonalData([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string athId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string firstName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string lastname, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string phone, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string email, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)] byte[] imageByteData) {
            this.Invoke("updateAthPersonalData", new object[] {
                        athId,
                        firstName,
                        lastname,
                        phone,
                        email,
                        imageByteData});
        }
        
        /// CodeRemarks
        public void updateAthPersonalDataAsync(string athId, string firstName, string lastname, string phone, string email, byte[] imageByteData) {
            this.updateAthPersonalDataAsync(athId, firstName, lastname, phone, email, imageByteData, null);
        }
        
        /// CodeRemarks
        public void updateAthPersonalDataAsync(string athId, string firstName, string lastname, string phone, string email, byte[] imageByteData, object userState) {
            if ((this.updateAthPersonalDataOperationCompleted == null)) {
                this.updateAthPersonalDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateAthPersonalDataOperationCompleted);
            }
            this.InvokeAsync("updateAthPersonalData", new object[] {
                        athId,
                        firstName,
                        lastname,
                        phone,
                        email,
                        imageByteData}, this.updateAthPersonalDataOperationCompleted, userState);
        }
        
        private void OnupdateAthPersonalDataOperationCompleted(object arg) {
            if ((this.updateAthPersonalDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateAthPersonalDataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/tracker_srv")]
    public partial class CompositeType {
        
        /// <remarks/>
        public bool BoolValue;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BoolValueSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string StringValue;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MongoDB.Bson")]
    public partial class BsonValue {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MongoDB.Bson")]
    public partial class BsonElement {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _name;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public BsonValue _value;
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void updateMomgoDataCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void updateMomgoDataFromFoxiCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void updateMomgoCalendarCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void updateGarminDataCompletedEventHandler(object sender, updateGarminDataCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateGarminDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateGarminDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public bool updateGarminDataResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// CodeRemarks
        public bool updateGarminDataResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void athCurrDataMongoCompletedEventHandler(object sender, athCurrDataMongoCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class athCurrDataMongoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal athCurrDataMongoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getAthNameByIdCompletedEventHandler(object sender, getAthNameByIdCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAthNameByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAthNameByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void GetDataUsingDataContractCompletedEventHandler(object sender, GetDataUsingDataContractCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataUsingDataContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataUsingDataContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public CompositeType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompositeType)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void deleteMarkerCompletedEventHandler(object sender, deleteMarkerCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteMarkerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteMarkerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void addMarkerCompletedEventHandler(object sender, addMarkerCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addMarkerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addMarkerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void validateNickNameCompletedEventHandler(object sender, validateNickNameCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class validateNickNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal validateNickNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getAllMarkersByIdCompletedEventHandler(object sender, getAllMarkersByIdCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllMarkersByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllMarkersByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string[][] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[][])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void createEventCompletedEventHandler(object sender, createEventCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createEventCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createEventCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void updateEventCompletedEventHandler(object sender, updateEventCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateEventCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateEventCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void deleteEventCompletedEventHandler(object sender, deleteEventCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteEventCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteEventCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getEventsNameAndIdCompletedEventHandler(object sender, getEventsNameAndIdCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEventsNameAndIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEventsNameAndIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string[][] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[][])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getEventIdByNameCompletedEventHandler(object sender, getEventIdByNameCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEventIdByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEventIdByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getEventIdByNameForMarkersCompletedEventHandler(object sender, getEventIdByNameForMarkersCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEventIdByNameForMarkersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEventIdByNameForMarkersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getcurrentEventByDateCompletedEventHandler(object sender, getcurrentEventByDateCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getcurrentEventByDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getcurrentEventByDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getEventNameByIdCompletedEventHandler(object sender, getEventNameByIdCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEventNameByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEventNameByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getEventNameJsonCompletedEventHandler(object sender, getEventNameJsonCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEventNameJsonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEventNameJsonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getProgramsJsonCompletedEventHandler(object sender, getProgramsJsonCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProgramsJsonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProgramsJsonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getErrprFromMobileCompletedEventHandler(object sender, getErrprFromMobileCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getErrprFromMobileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getErrprFromMobileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public bool getErrprFromMobileResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// CodeRemarks
        public bool getErrprFromMobileResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getProgramsJsonStringIdCompletedEventHandler(object sender, getProgramsJsonStringIdCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProgramsJsonStringIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProgramsJsonStringIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void insertNewProgramsJsonCompletedEventHandler(object sender, insertNewProgramsJsonCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class insertNewProgramsJsonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal insertNewProgramsJsonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public bool insertNewProgramsJsonResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// CodeRemarks
        public bool insertNewProgramsJsonResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void populateProgramCompletedEventHandler(object sender, populateProgramCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class populateProgramCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal populateProgramCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public bool populateProgramResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// CodeRemarks
        public bool populateProgramResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void updateProgramsJsonCompletedEventHandler(object sender, updateProgramsJsonCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateProgramsJsonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateProgramsJsonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public bool updateProgramsJsonResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// CodeRemarks
        public bool updateProgramsJsonResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void athCurrDataByDeviceIdCompletedEventHandler(object sender, athCurrDataByDeviceIdCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class athCurrDataByDeviceIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal athCurrDataByDeviceIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getProgramsCompleteJsonCompletedEventHandler(object sender, getProgramsCompleteJsonCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProgramsCompleteJsonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProgramsCompleteJsonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void checkProgramNameCompletedEventHandler(object sender, checkProgramNameCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkProgramNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkProgramNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getEventNameByTypeCompletedEventHandler(object sender, getEventNameByTypeCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEventNameByTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEventNameByTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getAthcurrentLocationCompletedEventHandler(object sender, getAthcurrentLocationCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAthcurrentLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAthcurrentLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getListedDeviceIdCompletedEventHandler(object sender, getListedDeviceIdCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getListedDeviceIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getListedDeviceIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void attendReportCompletedEventHandler(object sender, attendReportCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class attendReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal attendReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void insertNewDeviceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void validateUserCompletedEventHandler(object sender, validateUserCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class validateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal validateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void sessionUserCompletedEventHandler(object sender, sessionUserCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sessionUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sessionUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getStartMarkerPositionCompletedEventHandler(object sender, getStartMarkerPositionCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getStartMarkerPositionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getStartMarkerPositionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getUsrIdCompletedEventHandler(object sender, getUsrIdCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUsrIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUsrIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getAthcurrentLocationMongoCompletedEventHandler(object sender, getAthcurrentLocationMongoCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAthcurrentLocationMongoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAthcurrentLocationMongoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void myResultsCompletedEventHandler(object sender, myResultsCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class myResultsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal myResultsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string[][] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[][])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void myResultsGarCompletedEventHandler(object sender, myResultsGarCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class myResultsGarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal myResultsGarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getEventDateNameIdCompletedEventHandler(object sender, getEventDateNameIdCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEventDateNameIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEventDateNameIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void groupResultsMongoCompletedEventHandler(object sender, groupResultsMongoCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class groupResultsMongoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal groupResultsMongoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string[][] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[][])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getMyTrailForEventMongoCompletedEventHandler(object sender, getMyTrailForEventMongoCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMyTrailForEventMongoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMyTrailForEventMongoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string[][] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[][])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getAthDataByDeviceIdCompletedEventHandler(object sender, getAthDataByDeviceIdCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAthDataByDeviceIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAthDataByDeviceIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getUserCalendarCompletedEventHandler(object sender, getUserCalendarCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserCalendarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserCalendarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void updateUserDataJsonCompletedEventHandler(object sender, updateUserDataJsonCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateUserDataJsonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateUserDataJsonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getUserCalendarFutureCompletedEventHandler(object sender, getUserCalendarFutureCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserCalendarFutureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserCalendarFutureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getUserCalendarPastCompletedEventHandler(object sender, getUserCalendarPastCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserCalendarPastCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserCalendarPastCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getAthJsonByNickNameCompletedEventHandler(object sender, getAthJsonByNickNameCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAthJsonByNickNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAthJsonByNickNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getUserCalendarTodayCompletedEventHandler(object sender, getUserCalendarTodayCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserCalendarTodayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserCalendarTodayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void resetCalendarEventCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void updateMomgoGroupsCompletedEventHandler(object sender, updateMomgoGroupsCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateMomgoGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateMomgoGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void removeFromGroupCompletedEventHandler(object sender, removeFromGroupCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class removeFromGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal removeFromGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getAllUsersForGroupManageCompletedEventHandler(object sender, getAllUsersForGroupManageCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllUsersForGroupManageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllUsersForGroupManageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getIyemsForGroupCompletedEventHandler(object sender, getIyemsForGroupCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getIyemsForGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getIyemsForGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getIyemsForGroupManCompletedEventHandler(object sender, getIyemsForGroupManCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getIyemsForGroupManCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getIyemsForGroupManCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getNonIyemsForGroupCompletedEventHandler(object sender, getNonIyemsForGroupCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNonIyemsForGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNonIyemsForGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void replaceUtilCompletedEventHandler(object sender, replaceUtilCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class replaceUtilCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal replaceUtilCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getPmcCompletedEventHandler(object sender, getPmcCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPmcCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPmcCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public object Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getAllathForGroupCompletedEventHandler(object sender, getAllathForGroupCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllathForGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllathForGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getBestResultsCompletedEventHandler(object sender, getBestResultsCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBestResultsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBestResultsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getNearestEventCompletedEventHandler(object sender, getNearestEventCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNearestEventCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNearestEventCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public BsonElement[][] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BsonElement[][])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getBestResultsForAthCompletedEventHandler(object sender, getBestResultsForAthCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBestResultsForAthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBestResultsForAthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void updateCoachNotesCompletedEventHandler(object sender, updateCoachNotesCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateCoachNotesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateCoachNotesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public BsonElement[][] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BsonElement[][])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void updateMeberNotesCompletedEventHandler(object sender, updateMeberNotesCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateMeberNotesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateMeberNotesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public BsonElement[][] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BsonElement[][])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getNotesCompletedEventHandler(object sender, getNotesCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNotesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNotesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getNotesMobCompletedEventHandler(object sender, getNotesMobCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNotesMobCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNotesMobCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getUsrNickNameCompletedEventHandler(object sender, getUsrNickNameCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUsrNickNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUsrNickNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getAllIdsForNamesCompletedEventHandler(object sender, getAllIdsForNamesCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllIdsForNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllIdsForNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getEventInfoCompletedEventHandler(object sender, getEventInfoCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEventInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEventInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getAthIdByNickNameCompletedEventHandler(object sender, getAthIdByNickNameCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAthIdByNickNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAthIdByNickNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void mySummaryCompletedEventHandler(object sender, mySummaryCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class mySummaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal mySummaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void addSyncCompletedEventHandler(object sender, addSyncCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addSyncCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addSyncCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void validatSyncCompletedEventHandler(object sender, validatSyncCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class validatSyncCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal validatSyncCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getAllAthByFilterCompletedEventHandler(object sender, getAllAthByFilterCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllAthByFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllAthByFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getAthDitCompletedEventHandler(object sender, getAthDitCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAthDitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAthDitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getMobTotalsCompletedEventHandler(object sender, getMobTotalsCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMobTotalsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMobTotalsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getAthDitByNickNameCompletedEventHandler(object sender, getAthDitByNickNameCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAthDitByNickNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAthDitByNickNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void getUsrGroupCompletedEventHandler(object sender, getUsrGroupCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUsrGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUsrGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void updateAthPersonalDataCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}
